-- Atividade Murilo dos Santos Barbosa


/* Exercicio 01
No MySQL Workbench, utilizando o banco de dados ‘sprint1’:
Escreva e execute os comandos para:
• Criar a tabela chamada Atleta para conter os dados: idAtleta (int e chave primária da
tabela), nome (varchar, tamanho 40), modalidade (varchar, tamanho 40), qtdMedalha
(int, representando a quantidade de medalhas que o atleta possui)
• Inserir dados na tabela, procurando colocar mais de um atleta para cada modalidade
e pelo menos 5 atletas.
*/

create database sprint1;

use sprint1;

create table Atleta (
idAtleta int primary key auto_increment,
nome varchar(40),
modalidade varchar (40),
qtdMedalha int);

insert into Atleta (nome,modalidade,qtdMedalha) values ('Marcos','atletismo','3'),('Murilo','futebol','1'),('Leandro','natação','6'),('Ricardo','futebol','2'),('João','natação','10');

-- Exibir todos os dados da tabela.
select * from Atleta;

-- • Atualizar a quantidade de medalhas do atleta com id=1;
update atleta set qtdMedalha = 11 where idAtleta = 1;

-- • Atualizar a quantidade de medalhas do atleta com id=2 e com o id=3;
update atleta set qtdMedalha = 6 where idAtleta in (2,3);

-- • Atualizar o nome do atleta com o id=4;
update atleta set nome = 'Luis' where idAtleta = 4;

-- • Adicionar o campo dtNasc na tabela, com a data de nascimento dos atletas, tipo date;
alter table atleta add column dtNasc date;

-- • Atualizar a data de nascimento de todos os atletas;
update atleta set dtNasc = '1989-03-10' where idAtleta = 1;
update atleta set dtNasc = '1990-04-11' where idAtleta = 2;
update atleta set dtNasc = '1998-05-12' where idAtleta = 3;
update atleta set dtNasc = '1991-06-14' where idAtleta = 4;
update atleta set dtNasc = '1999-08-16' where idAtleta = 5;

-- • Excluir o atleta com o id=5;
delete from atleta where idAtleta = 5;

-- • Exibir os atletas onde a modalidade é diferente de natação;
select * from atleta where modalidade != 'natação';

-- • Exibir os dados dos atletas que tem a quantidade de medalhas maior ou igual a 3;
select * from atleta where qtdMedalha >= 3;

-- • Modificar o campo modalidade do tamanho 40 para o tamanho 60;
alter table atleta modify column modalidade varchar(60);

-- • Descrever os campos da tabela mostrando a atualização do campo modalidade
desc atleta;

-- • Limpar os dados da tabela; 
truncate table atleta;


/* Exercicio 02
No MySQL Workbench, utilizando o banco de dados ‘sprint1’:
Criar a tabela chamada Musica para conter os dados: idMusica, titulo (tamanho 40), artista
(tamanho 40), genero (tamanho 40), sendo que idMusica é a chave primária da tabela.
Inserir dados na tabela, procurando colocar um gênero de música que tenha mais de uma
música, e um artista, que tenha mais de uma música cadastrada. Procure inserir pelo
menos umas 7 músicas.*/

use sprint1;

create table Musica (
idMusica int primary key auto_increment,
titulo varchar(40),
artista varchar (40),
genero varchar(40));

insert into Musica (titulo,artista,genero) values ('Natural','Imagine Dragons','indie rock'),('Enemy','Imagine Dragons','indie rock'),('Circles','Post Malone','pop rap'),
('Psycho','Post Malone','pop rap'),('Pillowtalk','Zayn','pop'),('Bohemian Rhapsody','Queen','rock'),('I want to Break Free','Queen','rock');

-- Execute os comandos para:
-- a) Exibir todos os dados da tabela.
select * from Musica;

-- b) Adicionar o campo curtidas do tipo int na tabela
alter table musica add column curtidas int;
 
-- c) Atualizar o campo curtidas de todas as músicas inseridas;
update musica set curtidas = 1000342 where idMusica=1;
update musica set curtidas = 2000005 where idMusica =2;
update musica set curtidas = 4812427 where idMusica=3;
update musica set curtidas = 9812427 where idMusica=4;
update musica set curtidas = 2345300 where idMusica=5;
update musica set curtidas = 3463400 where idMusica=6;
update musica set curtidas = 3406000 where idMusica=7;

-- d) Modificar o campo artista do tamanho 40 para o tamanho 80;
alter table musica modify artista varchar(80);

-- e) Atualizar a quantidade de curtidas da música com id=1
update musica set curtidas =12309123 where idMusica=1;

-- f) Atualizar a quantidade de curtidas das músicas com id=2 e com o id=3;
update musica set curtidas = 1000000 where idMusica in (2,3);

-- g) Atualizar o nome da música com o id=5;
update musica set titulo = 'Better' where idMusica=5;

-- h) Excluir a música com o id=4;
delete from musica where idMusica=4;

-- i) Exibir as músicas onde o gênero é diferente de rock;
select * from musica where genero != 'rock';

-- j) Exibir os dados das músicas que tem curtidas maior ou igual a 20;
select * from musica where curtidas >=20;

-- k) Descrever os campos da tabela mostrando a atualização do campo artista;
desc musica;

-- l) Limpar os dados da tabela; 
truncate table musica;

-- Exercicio 03

/* No MySQL Workbench, utilizando o banco de dados ‘sprint1’:
Criar a tabela chamada Filme para conter os dados: idFilme, título (tamanho 50), genero
(tamanho 40), diretor (tamanho 40), sendo que idFilme é a chave primária da tabela.
Inserir dados na tabela, procurando colocar um gênero de filme que tenha mais de um
filme, e um diretor, que tenha mais de um filme cadastrado. Procure inserir pelo menos 
uns 7 filmes. */

use sprint1;

create table Filme (
idFilme int primary key auto_increment,
titulo varchar(50),
genero varchar(40),
diretor varchar (40)
);

insert into Filme (titulo,genero,diretor) values ('Vingadores: Guerra Infinita','ação','Irmãos Russo'),('Cherry - Inocência Perdida','drama','Irmãos Russo'),('A Cinco Passos de Você','drama','Justin Baldoni'),
('Nunca Deixe de Lembrar','drama','Florian Henckel'),('Dumbo','fantasia','Tim Burton'),('A Noiva-Cadáver','aventura','Tim Burton'),('O Lar das Crianças Peculiares','fantasia','Tim Burton');

-- Execute os comandos para:
-- • Exibir todos os dados da tabela.
select * from Filme;

-- • Adicionar o campo protagonista do tipo varchar(50) na tabela;
alter table filme add protagonista varchar(50);

-- • Atualizar o campo protagonista de todas os filmes inseridos;
update filme set protagonista = 'Robert Downey Jr' where idFilme = 1;
update filme set protagonista = 'Tom Holland' where idFilme = 2;
update filme set protagonista = 'Haley Lu Richardson' where idFilme = 3;
update filme set protagonista = 'Tom Schilling' where idFilme = 4;
update filme set protagonista = 'Colin Farrell' where idFilme = 5;
update filme set protagonista = 'Helena Bonham Carter e Johnny Depp' where idFilme = 6;
update filme set protagonista = 'Abraham Abe Portman' where idFilme = 7;

-- • Modificar o campo diretor do tamanho 40 para o tamanho 150;
alter table filme modify diretor varchar(150);

-- • Atualizar o diretor do filme com id=5;
update filme set diretor = 'Justin Springer' where idfilme=5;

-- • Atualizar o diretor dos filmes com id=2 e com o id=7;
update filme set diretor = 'Steven Spielberg' where idFilme in (2,7);

-- • Atualizar o título do filme com o id=6;
update filme set titulo = 'A Fantástica Fábrica de Chocolate' where idfilme = 6;

-- • Excluir o filme com o id=3;
delete from filme where idfilme = 3;

-- • Exibir os filmes em que o gênero é diferente de drama;
select * from Filme where genero != 'drama';

-- • Exibir os dados dos filmes que o gênero é igual ‘ação’;
select * from Filme where genero = 'ação';

-- • Descrever os campos da tabela mostrando a atualização do campo protagonista e diretor;
desc filme;

-- • Limpar os dados da tabela;
truncate table filme;


/* Exercicio 04

No MySQL Workbench, utilizando o banco de dados ‘sprint1’:
Criar a tabela chamada Professor para conter os dados: idProfessor, nome (tamanho 50), 
especialidade (tamanho 40), dtNasc (date), sendo que idProfessor é a chave primária da tabela.
Exemplo do campo data: ‘AAAA-MM-DD’ - ‘1983-10-13’.
Inserir dados na tabela, procurando colocar uma especialista para mais de um professor. 
Procure inserir pelo menos uns 6 professores.
*/

use sprint1;

create table Professor (
idProfessor int primary key auto_increment,
nome varchar(50),
especialidade varchar(40),
dtNasc date
);

insert into Professor (nome,especialidade,dtNasc) values ('Vivian','Banco de Dados',19831019),('Fernanda','Pesquisa e Inovação',19960123),
('Chola','Arquitetura Computacional',19801230),('Thiago','Socioemocional',19860825),('Dan','Socioemocional',19860312),
('Vera','Socioemocional',19701108);

-- Execute os comandos para:
-- a) Exibir todos os dados da tabela.
select * from Professor;
-- b) Adicionar o campo funcao do tipo varchar(50), onde a função só pode ser ‘monitor’, ‘assistente’ ou ‘titular’;
alter table professor add (
funcao varchar(50),  
constraint chkFuncao check (funcao in ('monitor','assistente','titular'))
);

-- c) Atualizar os professores inseridos e suas respectivas funções;
update professor set funcao = 'titular' where idprofessor=1;
update professor set funcao = 'titular' where idprofessor=2;
update professor set funcao = 'titular' where idprofessor=3;
update professor set funcao = 'monitor' where idprofessor=4;
update professor set funcao = 'titular' where idprofessor=5;
update professor set funcao = 'monitor' where idprofessor=6;

-- d) Inserir um novo professor;
insert into professor values (null,'João','Projeto e inovação','1998-09-12','assistente');

-- e) Excluir o professor onde o idProfessor é igual a 5;
delete from professor where idprofessor = 5;

-- f) Exibir apenas os nomes dos professores titulares;
select * from Professor where funcao = 'titular';

-- g) Exibir apenas as especialidades e as datas de nascimento dos professores monitores;
select especialidade,dtNasc from Professor where funcao = 'monitor';

-- h) Atualizar a data de nascimento do idProfessor igual a 3;
update professor set dtNasc='1970-12-09' where idprofessor = 3;

-- i) Limpar a tabela Professor;
truncate table professor;


/* Exercicio 06
No MySQL Workbench, utilizando o banco de dados ‘sprint1’:
Você vai criar uma tabela para armazenar os dados de revistas (como por ex: Veja, Isto é, 
Epoca, Quatro Rodas, Claudia, etc).
Escreva e execute os comandos para:
• Criar a tabela chamada Revista para conter os campos: idRevista (int e chave 
primária da tabela), nome (varchar, tamanho 40), categoria (varchar, tamanho 30). Os 
valores de idRevista devem iniciar com o valor 1 e ser incrementado automaticamente pelo sistema.
• Inserir 4 registros na tabela, mas sem informar a categoria.*/

use sprint1;

create table Revista (
idRevista int primary key auto_increment,
nome varchar(40),
categoria varchar(30) 
);

insert into Revista (nome) values ('Veja'),('Isto é'),('Época'),('Quatro Rodas');

-- Escreva e execute os comandos para:
-- • Exibir todos os dados da tabela.
select * from Revista;

-- • Atualize os dados das categorias das 3 revistas inseridas. Exibir os dados da tabela 
-- novamente para verificar se atualizou corretamente.
update Revista set categoria = 'gerais' where idRevista = 1;
update Revista set categoria = 'noticias' where idRevista = 2;
update Revista set categoria = 'noticias' where idRevista = 3;
update Revista set categoria = 'automóveis' where idRevista = 4;

select * from Revista;

-- • Insira mais 3 registros completos.
insert into Revista (nome,categoria) values ('Vogue','moda'),('Science','ciência'),('Época Negócios','negócios');

-- • Exibir novamente os dados da tabela.
select * from Revista;

-- • Exibir a descrição da estrutura da tabela.
desc Revista;

-- • Alterar a tabela para que a coluna categoria possa ter no máximo 40 caracteres.
alter table Revista modify column categoria varchar(40);

-- • Exibir novamente a descrição da estrutura da tabela, para verificar se alterou o tamanho da coluna categoria
desc Revista;

-- • Acrescentar a coluna periodicidade à tabela, que é varchar(15).
alter table Revista add column periodicidade varchar(15);

-- • Exibir os dados da tabela.
select * from Revista;

-- • Excluir a coluna periodicidade da tabela.
alter table Revista drop column periodicidade;


